@page "/weather"
@using DevProxy.WebApp.Services
@using System.Net
@attribute [StreamRendering]

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}
<p>
    <label style="color: red;">@errorMessage</label>
</p>


@code {
    [Inject]
    public IWeatherService WeatherService { get; set; }

    private IEnumerable<WeatherForecast>? forecasts;

    public string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        errorMessage = "";
        try
        {
            forecasts = (await WeatherService.GetWeatherForecasts()).ToList();
        }
        catch (HttpRequestException ex)
        {
            // Handle exceptions related to HTTP requests, such as 404 or 429
            if (ex.StatusCode == HttpStatusCode.NotFound)
            {
                errorMessage = "Lost the forecast trail! 🗺️ Try again later";
            }
            else if (ex.StatusCode == HttpStatusCode.Forbidden)
            {
                errorMessage = "Access denied! 🔒 Try another path.";
            }
            else if (ex.StatusCode == HttpStatusCode.TooManyRequests)
            {
                errorMessage = "Forecast frenzy! 🌪️ Try again soon.";
            }
            else if (ex.StatusCode == HttpStatusCode.BadRequest)
            {
                errorMessage = "Bad Request! 🚫 Please check your request.";
            }
            else
            {
                errorMessage = "Mysterious forecast mishap! 🌌 Please retry later.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Forecast fiasco! 🌧️ Please try again later.";
        }
    }

}
